# bot/handlers/text_handler.py
import os
import asyncio
import logging
from aiogram import Router, F
from aiogram.types import Message
from services.model_service import generate_model_response
from services.context_service import get_voice_mode
from services.audio_service import send_audio_with_progress  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π —Å–µ—Ä–≤–∏—Å TTS

logger = logging.getLogger(__name__)

text_router = Router()

MAX_MSG_LEN = 4000

def _split_text(text: str, chunk: int = MAX_MSG_LEN):
    for i in range(0, len(text), chunk):
        yield text[i:i + chunk]

@text_router.message(F.text)
async def handle_text_message(message: Message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if message.text.startswith('/'):
        return

    chat_id = message.chat.id
    user_input = message.text

    try:
        # 1) –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        status_msg = await message.reply("_–§–æ—Ä–º—É–ª–∏—Ä—É—é –æ—Ç–≤–µ—Ç..._", parse_mode="Markdown")  # —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ [aiogram editMessageText]  # noqa: E501
        # 2) –û—Ç–¥–µ–ª—å–Ω—ã–π —ç–º–æ–¥–∑–∏ (–∫—Ä—É–ø–Ω—ã–π/–∞–Ω–∏–º–∏—Ä—É–µ—Ç—Å—è, –ø–æ–∫–∞ –æ–¥–∏–Ω)
        icon_msg = await message.bot.send_message(chat_id, "üìù")  # –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ-—ç–º–æ–¥–∑–∏  # noqa: E501

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è (sync -> to_thread), –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º event loop
        response_text = await asyncio.to_thread(generate_model_response, chat_id, user_input, None)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        if not response_text:
            await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç.")
        else:
            first = True
            for chunk in _split_text(response_text):
                if first:
                    await message.reply(chunk, disable_web_page_preview=True)
                    first = False
                else:
                    await message.answer(chunk, disable_web_page_preview=True)

        # –£–¥–∞–ª—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞
        for mid in (getattr(status_msg, "message_id", None), getattr(icon_msg, "message_id", None)):
            if mid:
                try:
                    await message.bot.delete_message(chat_id, mid)
                except Exception:
                    pass

        # –ì–æ–ª–æ—Å–æ–≤–æ–π –¥—É–±–ª—å: —Ç–µ–ø–µ—Ä—å –í–°–Æ –ª–æ–≥–∏–∫—É –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ (—Å–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç, –∑–∞—Ç–µ–º —ç–º–æ–¥–∑–∏)
        # –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±—â–∏–π —Å–µ—Ä–≤–∏—Å send_audio_with_progress
        if response_text and get_voice_mode(chat_id):
            await send_audio_with_progress(
                bot=message.bot,
                chat_id=chat_id,
                text=response_text,
                reply_to_message_id=message.message_id
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}", exc_info=True)
        await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
