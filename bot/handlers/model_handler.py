# bot/handlers/model_handler.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /chm (Change Model)."""
import logging
from telebot import TeleBot, types as tb_types
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–æ–¥–µ–ª—è—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏
from mod_llm import MODELS, DEFAULT_MODEL, get_model_info
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—å—é –∏–∑ context_service
from services.context_service import get_chat_model, set_chat_model # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –∏ —Ç–∏–ø—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–µ–ª–∏
from google import genai
from google.genai import types

logger = logging.getLogger(__name__)

def register_model_handlers(bot: TeleBot):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏."""

    @bot.message_handler(commands=['chm'])
    def change_model(message):
        """–°–º–µ–Ω–∞ –º–æ–¥–µ–ª–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏."""
        chat_id = message.chat.id
        current_model_id = get_chat_model(chat_id) # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å –¥–ª—è —á–∞—Ç–∞
        
        markup = tb_types.InlineKeyboardMarkup(row_width=1)
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π, –≥—Ä—É–ø–ø–∏—Ä—É—è –∏—Ö –ø–æ —Å–µ–º–µ–π—Å—Ç–≤—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–µ—Ä–µ–º –º–æ–¥–µ–ª–∏ –ø–æ —Å–µ–º–µ–π—Å—Ç–≤–∞–º
        families = {}
        for model in MODELS:
            family = model.get('family', 'unknown')
            if family not in families:
                families[family] = []
            families[family].append(model)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, —Å–Ω–∞—á–∞–ª–∞ –ø–æ —Å–µ–º–µ–π—Å—Ç–≤–∞–º
        for family_name, family_models in families.items():
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–º–µ–π—Å—Ç–≤–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ —É–¥–æ–±–Ω–æ)
            # markup.add(tb_types.InlineKeyboardButton(text=f"-- {family_name.upper()} --", callback_data="noop"))
            
            for model in family_models:
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                btn_text = f"{model['name']}"
                if model['id'] == current_model_id:
                    btn_text = "‚úÖ " + btn_text
                btn = tb_types.InlineKeyboardButton(
                    text=btn_text,
                    callback_data=f"model_{model['id']}"
                )
                markup.add(btn)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        markup.add(tb_types.InlineKeyboardButton(
            text="‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª—è—Ö",
            callback_data="model_info"
        ))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        try:
            bot.send_message(
                chat_id,
                "ü§ñ <b>–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>\n"
                "–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å –æ—Ç–º–µ—á–µ–Ω–∞ –∑–Ω–∞—á–∫–æ–º ‚úÖ",
                parse_mode='HTML',
                reply_to_message_id=message.id,
                reply_markup=markup
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ –≤ —á–∞—Ç–µ {chat_id}: {e}")
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏.")

    @bot.callback_query_handler(func=lambda call: call.data.startswith('model_') and call.data != 'model_info')
    def model_selected(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏."""
        chat_id = call.message.chat.id
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –º–æ–¥–µ–ª–∏ –∏–∑ callback_data
        model_id = call.data.split('_', 1)[1] 
        
        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        selected_model_info = get_model_info(model_id)
        
        if selected_model_info:
            try:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
                set_chat_model(chat_id, model_id)
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç (–û–ë–ù–û–í–õ–ï–ù–û –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞)
                response = (
                    f"üîÑ <b>–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞:</b>\n"
                    f"‚Ä¢ –ò–º—è: <b>{selected_model_info['name']}</b>\n"
                    f"‚Ä¢ –°–µ–º–µ–π—Å—Ç–≤–æ: <b>{selected_model_info.get('family', 'N/A')}</b>\n"
                    # f"‚Ä¢ –¢–æ–∫–µ–Ω—ã: <b>{selected_model_info['tokens']:,}</b>\n" # <-- –£–ë–†–ê–ù–û
                    f"‚Ä¢ Free Requests/Day: <b>{selected_model_info.get('FreeRPD', 'N/A')}</b>\n" # <-- –î–û–ë–ê–í–õ–ï–ù–û
                    f"‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {selected_model_info['description']}"
                )
                
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏, —á—Ç–æ–±—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—ã–ª —á–∏—â–µ
                try:
                    bot.delete_message(chat_id, call.message.message_id)
                except Exception as e:
                    logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ —á–∞—Ç–µ {chat_id}: {e}")
                    # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –º–æ–¥–µ–ª–∏
                bot.send_message(
                    chat_id,
                    response,
                    parse_mode='HTML'
                )
                logger.info(f"–ú–æ–¥–µ–ª—å –¥–ª—è —á–∞—Ç–∞ {chat_id} –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ '{model_id}' ({selected_model_info['name']}).")
                
            except Exception as e:
                error_msg = (
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –º–æ–¥–µ–ª–∏:\n"
                    f"<code>{str(e)}</code>\n"
                    f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å."
                )
                logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ '{model_id}' –¥–ª—è —á–∞—Ç–∞ {chat_id}: {e}")
                bot.send_message(chat_id, error_msg, parse_mode='HTML')
        else:
            error_text = "‚ùå –û—à–∏–±–∫–∞: –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
            logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –º–æ–¥–µ–ª–∏ '{model_id}' –≤ —á–∞—Ç–µ {chat_id}.")
            bot.answer_callback_query(call.id, error_text) # –û—Ç–≤–µ—Ç –Ω–∞ callback, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ "–∑–∞–≤–∏—Å–ª–∞"
            # –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
            bot.send_message(chat_id, error_text)

    @bot.callback_query_handler(func=lambda call: call.data == "model_info")
    def show_models_info(call):
        """–ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö."""
        chat_id = call.message.chat.id
        response = "üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö:</b>\n"
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ —Å–µ–º–µ–π—Å—Ç–≤–∞–º –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        families = {}
        for model in MODELS:
            family = model.get('family', 'unknown')
            if family not in families:
                families[family] = []
            families[family].append(model)
        
        for family_name, family_models in families.items():
            response += f"\nüî∏ <b>–°–µ–º–µ–π—Å—Ç–≤–æ {family_name.upper()}:</b>\n"
            for model in family_models:
                response += (
                    f"‚Ä¢ <b>{model['name']}</b>\n"
                    f"  ID: <code>{model['id']}</code>\n"
                    # f"  –¢–æ–∫–µ–Ω—ã: {model['tokens']:,}\n" # <-- –£–ë–†–ê–ù–û
                    f"  Free RPD: {model.get('FreeRPD', 'N/A')}\n" # <-- –î–û–ë–ê–í–õ–ï–ù–û
                    # f"  –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–≤–æ–¥–∞: ${model['price_in']}/1M —Ç–æ–∫–µ–Ω–æ–≤\n" # <-- –£–ë–†–ê–ù–û
                    # f"  –°—Ç–æ–∏–º–æ—Å—Ç—å –≤—ã–≤–æ–¥–∞: ${model['price_out']}/1M —Ç–æ–∫–µ–Ω–æ–≤\n" # <-- –£–ë–†–ê–ù–û
                    f"  –ê—É–¥–∏–æ: {'‚úÖ' if model.get('audio_support', False) else '‚ùå'}\n"
                    f"  –û–ø–∏—Å–∞–Ω–∏–µ: {model['description']}\n\n"
                )
        
        # –û–±—Ä–µ–∑–∞–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (—Ö–æ—Ç—è Telegram –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ)
        # max_length = 4096 # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        # if len(response) > max_length:
        #     response = response[:max_length-300] + "\n\n... (—Å–ø–∏—Å–æ–∫ –æ–±—Ä–µ–∑–∞–Ω) ...\n\n" + "[[–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É]]"
        
        try:
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=call.message.message_id,
                text=response,
                parse_mode='HTML'
            )
            logger.debug(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (edit) –≤ —á–∞—Ç {chat_id}.")
        except Exception as e1:
            logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ {chat_id}: {e1}. –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ.")
            try:
                # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                # try:
                #     bot.delete_message(chat_id, call.message.message_id)
                # except:
                #     pass
                bot.send_message(chat_id, response, parse_mode='HTML')
                logger.debug(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (new message) –≤ —á–∞—Ç {chat_id}.")
            except Exception as e2:
                error_msg = f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–µ–ª—è—Ö: {e2}"
                logger.error(error_msg)
                bot.send_message(chat_id, error_msg)
        # ‚ùó –í–∞–∂–Ω–æ! –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ "–∑–∞–≤–∏—Å–∞—Ç—å"
        bot.answer_callback_query(call.id)        
